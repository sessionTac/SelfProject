<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springboot.osbulkparts.dao.warehouse.TStockInfoDao">
  <resultMap id="BaseResultMap" type="cn.springboot.osbulkparts.entity.TStockInfoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="material_category" jdbcType="VARCHAR" property="materialCategory" />
    <result column="material_desc_cn" jdbcType="VARCHAR" property="materialDescCn" />
    <result column="material_desc_en" jdbcType="VARCHAR" property="materialDescEn" />
    <result column="material_desc_rn" jdbcType="VARCHAR" property="materialDescRn" />
    <result column="stock_amount" jdbcType="DECIMAL" property="stockAmount" />
    <result column="data_role_at" jdbcType="VARCHAR" property="dataRoleAt" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <association property="dictMaterialCategory"
                 javaType="cn.springboot.osbulkparts.entity.TDictDataEntity">
        <result property="value" column="material_category"/>
        <result property="name" column="dictMaterialCategory"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    id, material_code, material_category, material_desc_cn, material_desc_en, material_desc_rn, 
    stock_amount, data_role_at, create_user, create_time, update_user, update_time, is_delete, 
    version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
		SELECT
		stockInfo.id,
		stockInfo.material_code,
		stockInfo.material_category,
		dictCate.`name` AS dictMaterialCategory,
		stockInfo.material_desc_cn,
		stockInfo.material_desc_en,
		stockInfo.material_desc_rn,
		stockInfo.stock_amount,
		stockInfo.data_role_at,
		stockInfo.create_time,
		stockInfo.create_user,
		stockInfo.update_time,
		stockInfo.update_user,
		stockInfo.is_delete,
		stockInfo.version
		FROM
			t_stock_info stockInfo
		LEFT JOIN t_dict_data dictCate ON stockInfo.material_category = dictCate.`value`
		AND dictCate.dict_type_code = 'mattertype'
		AND dictCate.is_enable = 1
		AND dictCate.delete_flg = 0
		WHERE
			stockInfo.is_delete = 0
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(materialCode)">
    <bind name="materialCode_like" value="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@toLike(materialCode)"/>
    	AND stockInfo.material_code LIKE #{materialCode_like,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(materialCategory)">
    	AND stockInfo.material_category = #{materialCategory,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(materialDescCn)">
    	<bind name="materialDescCn_like" value="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@toLike(materialDescCn)"/>
    	AND stockInfo.material_desc_cn LIKE #{materialDescCn_like,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(materialDescEn)">
    	<bind name="materialDescEn_like" value="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@toLike(materialDescEn)"/>
    	AND stockInfo.material_desc_en LIKE #{materialDescEn_like,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(materialDescRn)">
    	<bind name="materialDescRn_like" value="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@toLike(materialDescRn)"/>
    	AND stockInfo.material_desc_rn LIKE #{materialDescRn_like,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(dataRoleAt)">
    	AND stockInfo.data_role_at = #{dataRoleAt,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(createUser)">
    <bind name="createUser_like" value="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@toLike(createUser)"/>
    	AND stockInfo.create_user = #{createUser_like,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(createTimeStart)">
    	AND stockInfo.create_time &gt;= #{createTimeStart,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(createTimeEnd)">
        AND stockInfo.create_time &lt;= #{createTimeEnd,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(updateUser)">
    <bind name="updateUser_like" value="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@toLike(updateUser)"/>
    	AND stockInfo.update_user = #{updateUser_like,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(updateTimeStart)">
    	AND stockInfo.update_time &gt;= #{updateTimeStart,jdbcType=VARCHAR}
    </if>
    <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(updateTimeEnd)">
        AND stockInfo.update_time &lt;= #{updateTimeEnd,jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    delete from t_stock_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.springboot.osbulkparts.entity.TStockInfoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    insert into t_stock_info (id, material_code, material_category, 
      material_desc_cn, material_desc_en, material_desc_rn, 
      stock_amount, data_role_at, create_user, 
      create_time, update_user, update_time, 
      is_delete, version)
    values (#{id,jdbcType=VARCHAR}, #{materialCode,jdbcType=VARCHAR}, #{materialCategory,jdbcType=VARCHAR}, 
      #{materialDescCn,jdbcType=VARCHAR}, #{materialDescEn,jdbcType=VARCHAR}, #{materialDescRn,jdbcType=VARCHAR}, 
      #{stockAmount,jdbcType=DECIMAL}, #{dataRoleAt,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.springboot.osbulkparts.entity.TStockInfoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    insert into t_stock_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="materialCode != null">
        material_code,
      </if>
      <if test="materialCategory != null">
        material_category,
      </if>
      <if test="materialDescCn != null">
        material_desc_cn,
      </if>
      <if test="materialDescEn != null">
        material_desc_en,
      </if>
      <if test="materialDescRn != null">
        material_desc_rn,
      </if>
      <if test="stockAmount != null">
        stock_amount,
      </if>
      <if test="dataRoleAt != null">
        data_role_at,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
        create_time,
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialCategory != null">
        #{materialCategory,jdbcType=VARCHAR},
      </if>
      <if test="materialDescCn != null">
        #{materialDescCn,jdbcType=VARCHAR},
      </if>
      <if test="materialDescEn != null">
        #{materialDescEn,jdbcType=VARCHAR},
      </if>
      <if test="materialDescRn != null">
        #{materialDescRn,jdbcType=VARCHAR},
      </if>
      <if test="stockAmount != null">
        #{stockAmount,jdbcType=DECIMAL},
      </if>
      <if test="dataRoleAt != null">
        #{dataRoleAt,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
		 DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'),
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springboot.osbulkparts.entity.TStockInfoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    update t_stock_info
    <set>
      <if test="materialCode != null">
        material_code = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialCategory != null">
        material_category = #{materialCategory,jdbcType=VARCHAR},
      </if>
      <if test="materialDescCn != null">
        material_desc_cn = #{materialDescCn,jdbcType=VARCHAR},
      </if>
      <if test="materialDescEn != null">
        material_desc_en = #{materialDescEn,jdbcType=VARCHAR},
      </if>
      <if test="materialDescRn != null">
        material_desc_rn = #{materialDescRn,jdbcType=VARCHAR},
      </if>
      <if test="stockAmount != null">
        stock_amount = #{stockAmount,jdbcType=DECIMAL},
      </if>
      <if test="dataRoleAt != null">
        data_role_at = #{dataRoleAt,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springboot.osbulkparts.entity.TStockInfoEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 30 16:27:28 CST 2019.
    -->
    update t_stock_info
    set material_code = #{materialCode,jdbcType=VARCHAR},
      material_category = #{materialCategory,jdbcType=VARCHAR},
      material_desc_cn = #{materialDescCn,jdbcType=VARCHAR},
      material_desc_en = #{materialDescEn,jdbcType=VARCHAR},
      material_desc_rn = #{materialDescRn,jdbcType=VARCHAR},
      stock_amount = #{stockAmount,jdbcType=DECIMAL},
      data_role_at = #{dataRoleAt,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="checkingAndVersion" resultMap="BaseResultMap"
          parameterType="cn.springboot.osbulkparts.entity.TStockInfoEntity">
      SELECT
      <include refid="Base_Column_List"/>
      FROM
      t_stock_info
      WHERE
      is_delete = 0
      <if test="version != null ">
          AND version = #{version,jdbcType=INTEGER}
      </if>
      <if test="@cn.springboot.osbulkparts.common.utils.CommonSqlUtils@isNotBlank(id)">
          AND id = #{id,jdbcType=VARCHAR}
      </if>
  </select>
  <delete id="deleteBatachByNo" parameterType="java.util.List">
  	delete from t_stock_info where  material_code in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
        #{item.materialCode}
      </foreach>
  </delete>
  <insert id="importExcelData" parameterType="java.util.List">
	insert into t_stock_info
    (
        id,
        material_code,
        material_category,
        material_desc_cn,
        material_desc_en,
        material_desc_rn,
        stock_amount,
        data_role_at,
        create_user,
        create_time,
        update_user,
        update_time,
        is_delete,
        version
    ) values
    <foreach collection="list" item="item" index="index" separator=",">
    (
        #{item.id,jdbcType=VARCHAR},
        #{item.materialCode,jdbcType=VARCHAR},
        #{item.materialCategory,jdbcType=VARCHAR},
        #{item.materialDescCn,jdbcType=VARCHAR},
        #{item.materialDescEn,jdbcType=VARCHAR},
        #{item.materialDescRn,jdbcType=VARCHAR},
        #{item.stockAmount,jdbcType=DECIMAL},
        #{item.dataRoleAt,jdbcType=VARCHAR},
        #{item.createUser,jdbcType=VARCHAR},
      	DATE_FORMAT(now(),'%Y%m%d%H%m%S'),
        #{item.updateUser,jdbcType=VARCHAR},
        #{item.updateTime,jdbcType=VARCHAR},
        #{item.isDelete,jdbcType=INTEGER},
        #{item.version,jdbcType=INTEGER}
        )
      </foreach>
  </insert>
  <update id="deleteBatchData">
    update t_stock_info
    set update_user = #{updateUser,jdbcType=VARCHAR},update_time = DATE_FORMAT(now(),'%Y%m%d%H%m%S'),is_delete = #{isDelete,jdbcType=INTEGER}
    where id IN
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
 </mapper>